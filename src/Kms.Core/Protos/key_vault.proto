syntax = "proto3";

option csharp_namespace = "Kms.Core";

import "Protos/cipher_key.proto";
import "Protos/key_request.proto";
import "Protos/encrypted_data.proto";
import "Protos/key_audit_report.proto";


package key_vault;

// The greeting service definition.
service KeyVaulter {
  // Unary RPC: Create symmetric key
  rpc CreateSymmentricKey (CreateKeyRequest) returns (CipherKey);

  // Unary RPC: Create single asymmetric key
  rpc CreateAsymmetricKey (CreateKeyRequest) returns (EncryptedData);

  // Server streaming RPC: Create shared secrets
  rpc CreateSharedSecrets (CreateKeyRequest) returns (stream EncryptedData);

  // Unary RPC: Get shared secrets
  rpc GetSharedSectets (GetKeyRequest) returns (EncryptedData);

  // Server streaming RPC: Get others' public keys 
  rpc GetPublicKeys (GetKeyRequest) returns (stream EncryptedData);

  // Client streaming RPC: Audit working keys
  rpc AuditWorkingKeys (stream EncryptedData) returns (KeyAuditReports);

  // Bidirectional streaming RPC: Audit working keys
  rpc AuditWorkingKeysBid (stream EncryptedData) returns (stream KeyAuditReport);

  // Bidirectional streaming RPC: Renew keys
  rpc RenewKeysBid (stream EncryptedData) returns (stream EncryptedData);
}
